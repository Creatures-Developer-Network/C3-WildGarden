*GB Template
*# Pray-File "GB_Robin.agent"
*# DS-Name "Robin (C3)"
*# Depend robin.c16
*# Attach gb_c3_conv.c16

*# desc = "C3 Robin conversion. After injection, place nest in an appropriate location."
*# Agent Animation File = "gb_c3_conv.c16"
*# Agent Animation Gallery = "gb_c3_conv"
*# Agent Sprite First Image = 23
*# GB_Category = 3
*# Agent Author = "Creature Labs"

new: simp 2 17 1 "robin" 4 80 50
*This is the stuff to put it in "placement mode"
setv name "placed" 0
attr 3
pose 3
tint 255 128 128 128 128
*this is the normal stuff
mvsf game "ch_x" game "ch_y"
setv ov00 0
setv ov01 0
setv ov61 15
setv ov70 0
setv ov71 0
setv ov72 2120
setv ov73 550
*Setting this to 1 so it doesn't move?
setv ov80 1
setv ov88 0
setv ov98 0
setv ov02 0

tick 1


anim [0]






***Robin Timer
scrp 2 15 1 9
*add to age counter
	addv ov01 1
*ov02: energy level (hunger)
	subv ov02 1
*if old enough, increase sex drive
	doif ov01 gt 3000
		setv va66 ov01
		modv va66 10
		doif va66 eq 0
			addv ov20 1
		endi
	endi
*Obstacle checking:
	doif obst 0 lt 100
		setv ov10 1
		setv ov11 -1
		setv va02 rand 18 25
		setv va02 rand 12 18
		addv ov15 2
	endi
	doif obst 1 lt 100
		setv ov10 -1
		setv ov11 -1
		setv va02 rand 18 25
		setv va02 rand 12 18
		addv ov15 2
	endi
*freak out if you're underwater
	doif carr = null
		doif rtyp room ownr = 8
			doif ov00 ne 99
				subv ov02 10
				setv ov11 -1
				setv ov15 20
				setv vely rand -25 -30
				gsub vect
				gsub anim
				gsub move
				stop
			endi
		endi
	endi
	subv ov15 1
	doif ov15 gt 15
		setv ov15 15
	endi
	doif ov15 lt 0
		setv ov15 0
	endi

*Starve to death
	doif ov02 <= 0
		setv ov00 99
	endi

*If flagged for death, die - use different subroutines for adult vs child
	doif ov00 eq 99
*If you're adult, use one die subroutine
		doif ov01 gt 3000
			gsub die_
		endi
*If you're due to die young, use the other die subroutine
		doif ov01 le 3000
			gsub die2
		endi
	endi

*If adult, range is 800
	doif ov01 gt 3000
*		setv va89 800
*		addv va89 obst 3
*		rnge va89
*		doif rnge gt 1200
*			rnge 1200
*		endi
*		doif rnge lt 0
*			rnge 1200
*		endi
		rnge 800
	endi

*If young, range is 100
	doif ov01 lt 3000
*		setv va89 50
*		addv va89 obst 3
*		rnge va89
*		doif rnge gt 200
*			rnge 200
*		endi
*		doif rnge lt 0
*			rnge 200
*		endi
		rnge 100
	endi

*This flags birds to sleep in low-light rooms.
	inst
	doif carr = null
		doif prop room ownr 1 < 0.25
			doif ov19 <> null
				setv ov00 5
			endi
		endi
	endi
*If flagged to sleep, go to bed.
	doif ov00 eq 5
		gsub gbed
	endi
	slow

*If you're sleeping
	doif ov00 eq 98
		doif carr = null
			doif prop room ownr 1 > 0.25
				plne 2200
				setv ov00 0
				accg 1.5
				tick 4
			endi
		endi
	endi

*If your energy is less than the hunger threshold and you're old enough, seek badbugs
	doif ov02 lt ov73
		doif ov00 lt 90
			setv ov00 2
			doif ov01 lt 3000
				setv va47 2
				setv va48 14
				setv va49 0
				setv va45 0
				esee va47 va48 va49
					doif targ <> null
						addv va45 1
					endi
				next
*If you're near badbugs, set state to 2 (seek badbugs)
				doif va45 gt 1
					setv ov00 2
				else
*If anything else is true (far from food), set state to 6 (eat nest)
					setv ov00 6
				endi
			endi
		endi
	endi
*If state is 6, go to eat nest emergency subroutine.
	doif ov00 eq 6
		gsub enst
	endi
*If state is 2, set temporary variables to badbugs and then go to the get food subroutine.
	doif ov00 eq 2
		setv va47 2
		setv va48 14
		setv va49 0
		gsub gfod
	endi

*If state is less than 90
	doif ov00 lt 90
*If nest-gathering progress is less than or equal to 20 and you have a nest of your own
		doif ov98 le 20 and ov19 <> null
*Target your own nest
			targ ov19
			doif targ <> null
*getting the ov02 (energy level) of ov19 (nest)
				setv va50 ov02
				targ ownr
				doif va50 lt 180
*Set state of pigeon to 4 if energy level of nest is less than 180 (gathering nest materials)
					setv ov00 4
				endi
			endi
			targ ownr
		endi
	endi
	inst

	slow
*state is 4 and you have a nest
	doif ov00 eq 4 and ov19 <> null
		targ ov19
		doif targ <> null
			setv va50 ov02
			targ ownr
			doif va50 lt 180
*gather materials
*if your nest has less than 180 energy
				gsub gmat
			else
				setv ov00 0
			endi
		else
			targ ownr
*Roam otherwise
			setv ov00 0
		endi
	endi

*If adult
	doif ov01 gt 3000
*Go to check subroutine
		gsub chek
*ov17 is MATE - try to find one
		doif ov17 = null
			gsub fmte
		endi
*and ov19 is NEST - try to find one
		doif ov19 = null
			gsub fnst
		endi
*If nest exists, go to sync nest subroutine
		doif ov19 <> null
			gsub snst
		endi
*Do if sex drive is greater than 50
		doif ov20 gt 50
*set state to 3 if you have no mate, or nest, or anything to do
			doif ov17 <> null
				doif ov19 <> null
					doif ov00 = 0
						setv ov00 3

					endi
				endi
			endi
		endi
		inst

		slow
*so if you have no mate or nest or anything to do and high sex drive... look for a mate
		doif ov00 eq 3
			gsub mate
		endi
	endi

*If age is 3000, go to mature subroutine
	doif ov01 le 3000
		doif ov01 eq 3000
			gsub matr
		endi
	endi

*State 0. roam
	doif ov00 eq 0
		gsub roam
	endi

*State 1, nest hunt
	doif ov00 eq 1

		gsub nest
	endi

	stop

	subr vect
		doif obst 3 lt 5
			setv va01 rand 6 12
*			setv va02 rand 10 25
			doif rand 0 5 <> 0 and ov00 <> 1
				setv va02 rand 2 6
			elif ov00 = 1
				setv va02 rand 22 24
			endi
			setv ov11 -1
		endi
		doif obst 3 gt 4
			setv va01 rand 10 20
			setv va02 rand 18 25
*			doif ov00 = 1 or ov00 = 3
*				setv va01 rand 5 10
*				setv va02 rand 8 15
*			endi
		endi

	retn

*ov10 is left/right, ov11/15 is updown
	subr move
		mulv va01 ov10
		mulv va02 ov11
		subv va02 ov15
		velo va01 va02

	retn

	subr anim
		setv va03 0

		doif obst down lt 5
			anim []
			doif ov10 <= 0
				base ov36
				anim [4 3 2 1]
			endi
			doif ov10 > 0
				base ov37
				anim [4 3 2 1]
			endi
		endi


		doif obst down gt 4
			anim []
			doif ov10 <= 0
				base ov30
				anim [0 1 2 3 4 5 255]
			endi
			doif ov10 > 0
				base ov31
				anim [0 1 2 3 4 5 255]
			endi
		endi
	retn

	subr gbed
		seta ov16 ov19
		targ ov16
		doif targ <> null
			inst
			targ ownr
			gsub hunt
			gsub near
			doif va40 eq 1
				gsub slep
			endi
		else
			targ ownr
			setv ov00 0
			seta ov19 null
			seta ov16 null
		endi
		slow
		targ ownr
		gsub vect
		gsub anim
		gsub move
		stop
	retn

	subr die_
		setv va50 posx
		setv va51 posy
		setv va52 ov10
		inst
		new: simp 2 10 1 "robin" 24 54 2000
		accg 4
		elas 1
		fric 80
		attr 192
		perm 99
		tick 20
		setv ov10 va52
		setv ov02 30
		setv ov61 14
		setv ov70 0
		subv va50 20
		subv va51 20
		doif tmvt va50 va51 <> 1
			kill targ
			kill ownr
			stop
		endi
		mvto va50 va51
		setv vely 0
		targ ownr
		kill targ
		stop
	retn


	subr die2
		setv va50 posx
		setv va51 posy
		setv va52 ov10
		inst
		new: simp 2 10 1 "robin" 24 138 2000
		elas 1
		fric 80
		accg 4
		attr 192
		perm 99
		tick 20
		setv ov10 va52
		setv ov02 30
		setv ov61 14
		setv ov70 0
		subv va50 20
		subv va51 20
		doif tmvt va50 va51 <> 1
			kill targ
			kill ownr
			stop
		endi
		mvto va50 va51
		setv vely 0
		targ ownr
		kill targ
		stop
	retn

	subr slep
		setv ov00 98
		accg 0
		targ ov16
		setv va70 posx
		setv va71 posy
		setv va89 plne
		targ ownr
		subv va89 1
		plne va89
		subv va70 25
		subv va71 25
		velo 0 0
		doif tmvt va70 va71 <> 1
			accg 1.5
			setv ov00 0
			stop
		endi
		mvto va70 va71
		setv ov00 98
		tick 250
		doif ov10 lt 0
			base 0
			pose 38
		endi
		doif ov10 gt 0
			base 0
			pose 45
		endi

		stop
	retn

	subr gfod
		inst
		setv va47 2
		setv va48 14
		setv va49 0
		doif ov16 = null
			gsub find
			doif ov16 = null
				setv va47 2
				setv va48 13
				setv va49 0
				gsub find
			endi
			doif ov16 = null
				setv va47 2
				setv va48 8
				setv va49 0
				gsub find
			endi
			doif ov16 = null
				setv va47 2
				setv va48 9
				setv va49 0
				gsub find
			endi
			doif ov16 = null
				setv va47 2
				setv va48 3
				setv va49 0
				gsub find
			endi
			doif ov16 = null
				targ ownr
				setv ov00 0
				stop
			endi
		endi
		targ ov16
		doif targ <> null
			inst
			targ ownr

			gsub hunt
			doif touc ov16 ownr <> 0
				addv ov02 ov72
				mesg writ ov16 12
				doif ov02 gt ov74
					setv ov00 0
				endi
				doif obst 3 lt 10
					gsub peck
				endi

				targ ownr
				slow
			endi
		endi
		targ ownr
		slow
		gsub vect
		gsub anim
		gsub move
		stop
	retn

	subr gmat
		targ ov19
		doif targ <> null
			setv va50 ov02
			targ ownr
			doif va50 lt 180
				setv va47 2
				setv va48 6
				setv va49 1
				gsub find
				doif ov16 <> null
					gsub hunt
*					gsub near
*					doif va40 eq 1
					doif touc ownr ov16 <> 0
						targ ov16
						doif ov99 = 1
							targ ownr
							addv ov98 100
							gsub peck
							setv ov00 1
						else
							targ ownr
							setv ov00 0
							gsub roam
							stop
						endi
					endi
				else
					setv ov00 0
				endi
				gsub vect
				gsub anim
				gsub move
				stop
			else
				setv ov00 0
			endi
		endi
	retn

	subr chek
		targ ov17
		doif targ = null
			targ ownr
			seta ov17 null
		endi
		targ ownr
		targ ov19
		doif targ = null
			targ ownr
			seta ov19 null
		endi
		targ ownr
	retn

	subr fmte
		setv va47 2
		setv va48 15
		setv va49 1
		gsub find
		setv va88 0
		inst
		doif ov16 <> null
			esee va47 va48 va49
				doif targ <> null
					doif va88 eq 0
						setv va50 ov06
						seta va51 ov17
						seta va52 targ
						targ ownr
						doif va50 ne ov06
							doif va51 = null
								seta ov17 va52
								setv va88 1
								targ ov17
								seta ov17 ownr
								targ ownr

							endi
						endi
					endi
				endi
			next
		endi
	retn

	subr fnst
		setv va47 2
		setv va48 17
		setv va49 1
		gsub find
		setv va88 0
		doif ov16 <> null
			inst
			esee va47 va48 va49
				doif targ <> null
					doif va88 eq 0
						setv va50 ov71
						seta va52 targ
						targ ownr
						doif va50 eq 0
							seta ov19 va52
							setv va88 1
							targ ov19
							setv ov71 1
							targ ownr
						endi
					endi
				endi
			next
			targ ownr
		endi
	retn

	subr snst
		seta va50 null
		doif ov06 eq 0
			targ ov19
			doif targ = null
				targ ownr
				seta ov19 null
			endi
			targ ownr
		endi
		doif ov06 eq 1
			targ ov17
			doif targ <> null
				seta va50 ov19
			else
				targ ownr
				seta ov17 null
			endi
			targ ownr
			doif va50 <> null
				doif ov19 <> null
					targ ov19
					doif targ <> null
						targ ownr
						seta ov19 va50
					endi
				endi
				targ ownr
			endi

		endi
	retn

	subr mate
		seta ov16 ov17
		targ ov16
		doif targ <> null
			targ ownr
			seta ov16 ov17
			gsub hunt
*			gsub near
*			doif va40 eq 1
			doif touc ov16 ownr <> 0
				setv va66 0
				rnge 600
				esee 2 15 1
					addv va66 1
				next
				doif ov06 eq 1
					doif va66 <= 3
						setv ov70 1
						setv ov00 1
					else
						setv ov00 0
					endi
				else
					setv ov00 0
				endi
				setv ov20 0
			endi
		else
			targ ownr
			seta ov17 null
			setv ov00 0
		endi
		targ ownr
		gsub vect
		gsub anim
		gsub move
		stop
	retn

	subr matr
		setv va50 ov00
		setv va51 ov06
		setv va52 posx
		setv va53 posy
		subv va52 25
		subv va53 25
		inst
		new: simp 2 15 1 "robin" 79 0 2200
		elas 5
		accg 1.5
		perm 49
		tick 4
		attr 195
		rnge 1000

*fly left
		setv ov30 0
*fly right
		setv ov31 6
*peck left
		setv ov32 12
*peck right
		setv ov33 17
*sing left
		setv ov34 22
*sing right
		setv ov35 30
*hop left
		setv ov36 38
*hop right
		setv ov37 45
*glide left
		setv ov38 52
*glide right
		setv ov39 53
*dive left
		setv ov40 54
*dive right
		setv ov41 62
*die left
		setv ov42 70
*die right
		setv ov43 74


		setv ov00 va50
		setv ov01 3000
		setv ov70 0
		seta ov17 null
		seta ov18 null
		setv ov06 va51
		seta ov16 null
		setv ov09 0
		setv ov10 1
		setv ov11 -1
		setv ov15 0
		seta ov19 null
		setv ov30 0
		setv ov61 65
		setv ov72 800
		setv ov73 650
		setv ov74 1850
		setv ov75 20
		setv ov02 200
		doif tmvt va52 va53 <> 1
			kill targ
			targ ownr
			setv ov00 0
			stop
		else
			mvto va52 va53
			kill ownr
			stop
		endi

	retn

	subr enst
		seta ov16 ov19
		targ ov16
		doif targ <> null
			targ ownr
			seta ov16 ov19
			gsub hunt
			gsub near
			doif va40 eq 1
				targ ov16
				setv va89 ov02
				targ ownr
				doif va89 gt 0
					negv ov75
					mesg wrt+ ov16 256 ov75 0 0
					negv ov75
					addv ov02 200
					setv ov00 0
				else
					setv ov00 0
				endi
			endi
		else
			targ ownr
			seta ov19 null
			setv ov00 0
		endi
		targ ownr
		setv ov15 5
		gsub vect
		gsub anim
		gsub move
		stop
	retn

	subr roam
		setv va66 rand 0 20

		doif va66 eq 0
			negv ov10
		endi
		doif obst 3 lt 5
			doif va66 gt 15
				gsub peck
			endi
			doif va66 eq 1
				gsub sing
			endi
		endi

		gsub vect
		gsub anim
		gsub move
		stop
	retn

	subr peck
		anim []
		doif ov10 <= 0
			base ov32
			anim [0 1 2 3 4 3 2 1 0]
			over
		endi
		doif ov10 > 0
			base ov33
			anim [0 1 2 3 4 3 2 1 0]
			over
		endi
	retn

	subr sing
		anim []
		doif ov10 <= 0
			base ov34
			anim [0 1 2 3 4 5 6 7 0 1 2 3 4 5 6 7 0 1 2 3 4 5 6 7]
			setv va66 rand 1 4
			doif va66 eq 2
				snde "brd4"
			endi
			doif va66 eq 3
				snde "brd4"
			endi
			doif va66 eq 4
				snde "brd4"
			endi
			over
		endi
		doif ov10 > 0
			base ov35
			anim [0 1 2 3 4 5 6 7 0 1 2 3 4 5 6 7 0 1 2 3 4 5 6 7]
			setv va66 rand 1 4
			doif va66 eq 2
				snde "brd4"
			endi
			doif va66 eq 3
				snde "brd4"
			endi
			doif va66 eq 4
				snde "brd4"
			endi
			over
		endi

	retn

	subr nest
		inst
		doif ov19 = null
			setv ov00 0
			stop
		endi
		seta ov16 ov19
		targ ov16
		doif targ <> null
			targ ownr
			seta ov16 ov19
			gsub hunt
*			gsub near
*			doif va40 eq 1
			doif touc ownr ov16 <> 0
				mesg wrt+ ov16 256 ov98 0 0
				subv ov98 ov98
				doif ov06 eq 1
					doif ov70 eq 1
						mesg wrt+ ov16 260 1 0 0
						setv ov70 0
					endi
				endi
				setv ov00 0
			endi
		else
			targ ownr
			seta ov19 null
			setv ov00 0
		endi
		targ ownr
		setv ov15 10
		gsub vect
		gsub anim
		gsub move
		stop
		slow
	retn

	subr crap
		setv va50 posx
		setv va51 posy
		subv va50 8
		subv va51 0
		doif totl 2 1 10 gt 0
			rtar 2 1 10
			doif targ <> null
				setv va52 ov00
			else
				setv va52 0
			endi
			targ ownr
		endi

		inst
		new: simp 2 10 2 "robin" 4 168 49
		elas 1
		fric 80
		attr 195
		perm 99
		accg 3
		tick 10
		setv ov00 va52
		setv ov01 0
		setv ov61 10
		base 0
		doif ov00 eq 0
			pose 2
		else
			pose 0
		endi
		doif tmvt va50 va51 <> 1
			kill targ
			targ ownr
			stop
		endi
		mvto va50 va51
		setv vely 0
		targ ownr
		slow
	retn
	subr find

		setv va99 99999999
		seta va58 null
		inst
		esee va47 va48 va49
			doif targ <> null
				setv va50 relx targ ownr
				setv va51 rely targ ownr
				doif va50 lt 0
					negv va50
				endi
				doif va51 lt 0
					negv va51
				endi
				setv va52 va50
				mulv va52 va52
				setv va53 va51
				mulv va53 va53
				setv va54 va52
				addv va54 va53
				doif va54 lt va99
					seta va58 targ
					setv va99 va54
				endi
			endi
		next
		targ ownr

		doif va58 <> null

			targ ownr
			seta ov16 va58
		else
			targ ownr
			seta ov16 null
		endi
		targ ownr
	retn
	subr hunt
		inst
		targ ov16
		doif targ <> null
			setv va50 posx
			setv va51 posy
			targ ownr
			doif posx lt va50
				setv ov10 1
			endi
			doif posx gt va50
				setv ov10 -1
			endi
			doif posy lt va51
				setv ov11 0
			endi
			doif posy gt va51
				setv ov11 -1
			endi
		else
			targ ownr
			seta ov16 null
			setv ov00 0
		endi
	retn

	subr near
		setv va40 0
		doif ov16 <> null
			inst
			targ ov16
			setv va50 posx
			setv va51 posy
			setv va52 posx
			setv va53 posy
			subv va50 50
			subv va51 50
			addv va52 50
			addv va53 50
			targ ownr
			doif posx gt va50
				doif posy gt va51
					doif posx lt va52
						doif posy lt va53
							setv va40 1
						endi
					endi
				endi
			endi
			slow
		endi
	retn


endm
***Adult Robin Dropped
scrp 2 15 1 5
	setv ov00 0
	accg 1.5
	tick 4
endm
***Adult Robin Collided
scrp 2 15 1 6
	inst
	doif obst down > 5
		doif velx <= 0
			setv ov10 -1
		endi
		doif velx > 0
			setv ov10 1
		endi
	endi


	doif obst 3 < 5
		anim []
		doif ov10 <= 0
			base ov36
			anim [4 3 2 1]
		endi
		doif ov10 > 0
			base ov37
			anim [4 3 2 1]
		endi
	endi


	doif obst 3 > 4
		anim []
		doif ov10 <= 0
			base ov30
			anim [0 1 2 3 4 5 255]
		endi
		doif ov10 > 0
			base ov31
			anim [0 1 2 3 4 5 255]
		endi
	endi

	slow
endm


***Adult Robin ???
scrp 2 15 1 256
	addv ov02 _p1_
endm


***Adult Robin ???
scrp 2 15 1 257
	addv ov98 _p1_
endm
***Adult Robin ???
scrp 2 15 1 266

endm
***Robin Corpse Rottin'
scrp 2 10 1 9
	subv ov02 1
	doif ov02 > 0
		doif ov70 eq 0
			anim []
			doif ov10 <= 0
				base 0
				anim [0 1 2 3 4 5 6 7]
				over
			endi
			doif ov10 > 0
				base 8
				anim [0 1 2 3 4 5 6 7]
				over
			endi
		else
			doif ov10 lt 0
				base 0
				pose 16
			endi
			doif ov10 gt 0
				base 0
				pose 20
			endi
		endi
	endi
	doif ov02 le 0
		anim []
		doif carr = null
			doif ov10 <= 0
				base 16
				anim [0 1 2 3]
				over
			endi
			doif ov10 > 0
				base 20
				anim [0 1 2 3]
				over
			endi
			wait 10
			kill targ
		endi
	endi
endm
***Robin Corpse collided
scrp 2 10 1 6
	setv ov70 1
endm


***Baby Robin Timer
scrp 2 15 4 9
	base 0
	anim [2 3 4 5 255]
	mesg wrt+ ov19 258 1 0 0
	addv ov01 1
	doif ov01 gt 20
		setv va50 posx
		setv va51 posy
		seta va52 ov19
		inst
		new: simp 2 15 1 "robin" 79 84 2200

		accg 1.5
		elas 5
		tick 4
		attr 195
		rnge 1000

*fly left
		setv ov30 0
*fly right
		setv ov31 6
*peck left
		setv ov32 12
*peck right
		setv ov33 17
*sing left
		setv ov34 22
*sing right
		setv ov35 30
*hop left
		setv ov36 38
*hop right
		setv ov37 45
*glide left
		setv ov38 52
*glide right
		setv ov39 53
*dive left
		setv ov40 54
*dive right
		setv ov41 62
*die left
		setv ov42 70
*die right
		setv ov43 74


		setv ov00 0
		setv ov01 0
		setv ov70 0
		seta ov17 null
		seta ov18 null
		setv ov06 rand 0 1
		seta ov16 null
		setv ov09 0
		setv ov10 1
		setv ov11 -1
		setv ov15 0
		seta ov19 va52
		setv ov30 0
		setv ov61 60
		setv ov72 800
		setv ov73 650
		setv ov74 1850
		setv ov75 20

		setv ov02 200
		doif tmvt va50 va51 <> 1
			kill targ
			kill ownr
			stop
		endi
		mvto va50 va51

		targ ownr
		kill targ
	endi
endm

***Baby Robin Pushed
scrp 2 15 4 1
	accg 4
	setv vely 0
endm
***Baby Robin Collided
scrp 2 15 4 6
	setv va50 posx
	setv va51 posy
	seta va52 ov19
	inst
	new: simp 2 10 3 "robin" 1 163 49
	accg 4
	elas 0
	perm 99
	tick 30
	attr 195
	setv ov01 1
	subv va50 25
	subv va51 15
	setv ov61 12
	doif tmvt va50 va51 <> 1
		kill targ
		kill ownr
		stop
	endi
	mvto va50 va51
	setv vely 0
	targ ownr
	kill targ
endm
***Robin Egg Timer
scrp 2 18 1 9
	addv ov01 1
	doif ov01 gt 20
		setv va50 posx
		setv va51 posy
		seta va52 ov19
		inst
		new: simp 2 15 4 "robin" 6 162 49
		elas 0
		clac 0
		accg 0
		perm 99
		tick 30
		attr 198
		seta ov19 va52
		setv ov01 1
		setv va66 rand 35 12
		subv va50 va66
		subv va51 15
		doif tmvt va50 va51 <> 1
			kill targ
			kill ownr
			stop
		endi
		mvto va50 va51
		setv ov61 60
		base 0
		pose 2
		targ ownr
		kill targ
	endi
	setv va88 0
	etch 2 17 1
		addv va88 1
	next
	doif va88 lt 1
		mesg writ targ 0
	endi
endm
***Robin Egg Pushed
scrp 2 18 1 1
	accg 4
	setv vely 0
endm
***Robin Egg collided
scrp 2 18 1 6
	setv va50 posx
	setv va51 posy
*setv va52 ov19
	inst
	new: simp 2 10 3 "robin" 1 163 49
	elas 0
	accg 4
	perm 99
	tick 30
	attr 195
	setv ov01 1
	subv va50 25
	subv va51 15
	doif tmvt va50 va51 <> 1
		kill targ
		kill ownr
		stop
	endi
	mvto va50 va51
	setv ov61 12
	setv vely 0
	targ ownr
	kill targ
endm
***Robin Corpse Rotted
scrp 2 10 3 9
	kill ownr
endm
***Robin Corpse Rotted 2
scrp 2 10 2 9
	kill ownr
endm

*Added drop script
scrp 2 17 1 5
	setv va00 228
	tint va00 128 128 128 128
	reps 10
		doif movs = 0
			wait 10
			subv va00 10
			tint va00 128 128 128 128
		else
			tint 255 128 128 128 128
			stop
		endi
	repe
	inst
	doif movs ne 0
		stop
	endi
	setv name "placed" 1
	tint 128 128 128 128 128
	attr 0
	sndc "beam"
	setv va00 posx
	setv va01 posy
**Create a couple happy little birds~
	reps 2
		new: simp 2 15 1 "robin" 79 0 2200
		accg 1.5
		tick 4
		attr 195
		elas 5
		fric 80

		setv ov30 0
		setv ov31 6
		setv ov32 12
		setv ov33 17
		setv ov34 22
		setv ov35 30
		setv ov36 38
		setv ov37 45
		setv ov38 52
		setv ov39 53
		setv ov40 54
		setv ov41 62
		setv ov42 70
		setv ov43 74
		setv ov00 0
		setv ov01 3000
		setv ov70 0
		seta ov17 null
		seta ov18 null
		setv ov06 rand 0 2
		seta ov16 null
		setv ov09 0
		setv ov10 1
		setv ov11 -1
		setv ov15 0
		seta ov19 null
		setv ov20 0
		setv ov61 65
		setv ov72 800
		setv ov73 650
		setv ov74 1850
		setv ov75 20
		setv ov02 800
		mvsf va00 va01
	repe
endm
***Robin Nest Timer
scrp 2 17 1 9
	doif name "placed" = 0
		pose 3
		stop
	endi

	doif ov80 <> 0
		tick 20
	endi
	doif ov80 = 0
*gsub put_
	endi
	doif ov02 gt 0

	endi


	doif ov02 le 0
		addv ov01 1
		setv va88 0
		doif ov01 gt 20
			setv ov71 0
		endi
	endi
	doif ov02 gt 60
		setv ov01 0
		setv ov71 1
		setv va88 1
	endi
	doif ov02 gt 120
		setv va88 2
	endi
	doif ov02 gt 180
		setv va88 3
	endi
	base 0
	pose va88

	doif pose eq 3
		doif ov70 eq 1
			setv va66 0
			esee 2 15 1
				addv va66 1
			next
			doif va66 <= 4
				gsub egg_
			endi
			setv ov70 0
		endi
	endi
	stop

	subr put_

		setv va50 0
		setv va55 0
		reps 10
			inst
			addv va55 1
			seta va00 targ
			enum 2 17 1
				inst
				doif ov80 eq va55
					setv va50 1
				endi
			next
			targ va00
			doif va50 eq 0
				setv va52 va55
			endi
			setv va50 0

			slow
		repe

		doif va52 eq 1
			setv va90 5415
			setv va91 728
			subv va90 ov72
			subv va91 ov73
			mvto va90 va91

			setv ov80 va52
		endi
		doif va52 eq 2
			setv va90 5370
			setv va91 1020
			subv va90 ov72
			subv va91 ov73
			mvto va90 va91

			setv ov80 va52
		endi

		doif va52 eq 3
			setv va90 5140
			setv va91 940
			subv va90 ov72
			subv va91 ov73
			mvto va90 va91
			setv ov80 va52
		endi

		doif va52 eq 4
			setv va90 4723
			setv va91 1170
			subv va90 ov72
			subv va91 ov73
			mvto va90 va91

			setv ov80 va52
		endi

		doif va52 eq 5
			setv va90 4440
			setv va91 767
			subv va90 ov72
			subv va91 ov73
			mvto va90 va91

			setv ov80 va52
		endi

		doif va52 eq 6
			setv va90 4162
			setv va91 979
			subv va90 ov72
			subv va91 ov73
			mvto va90 va91

			setv ov80 va52
		endi

		doif va52 eq 7
			setv va90 4798
			setv va91 748
			subv va90 ov72
			subv va91 ov73
			mvto va90 va91

			setv ov80 va52
		endi
*grendel area
		doif va52 eq 8
			setv va90 2250
			setv va91 1471
*			subv va90 ov72
*			subv va91 ov73
			mvto va90 va91
			setv ov80 va52
		endi

		doif va52 eq 9
			setv va90 790
			setv va91 1450
*			subv va90 ov72
*			subv va91 ov73
			mvto va90 va91
			setv ov80 va52
		endi

		doif va52 eq 10
			setv va90 1077
			setv va91 1414
*			subv va90 ov72
*			subv va91 ov73
			mvto va90 va91
			setv ov80 va52
		endi

	retn

	subr egg_
		setv va50 posx
		setv va51 posy
		inst
		doif ov88 = 0
			new: simp 2 18 1 "robin" 2 162 49
* pigeon egg
* 2 18 12
* pigeon hatchling.
* 2 15 13
		endi
		doif ov88 = 1
			new: simp 2 18 12 "woodpigeon" 2 44 49
		endi
		accg 0
		bhvr 17
		perm 99
		tick 30
		attr 199
		seta ov19 ownr
		setv ov01 1
		setv va52 rand 35 12
		subv va50 va52
		subv va51 35
		doif tmvt va50 va51 <> 1
			kill targ
			targ ownr
			stop
		endi
		mvto va50 va51
		setv ov61 25
		base 0
		pose 0
		targ ownr
		slow
	retn

endm

scrp 2 17 1 256
	addv ov02 _p1_
endm

scrp 2 17 1 257
	setv ov71 _p1_
endm

scrp 2 17 1 258
	subv ov02 _p1_
endm

scrp 2 17 1 260
	setv ov70 _p1_
	setv ov88 _p2_
endm
***Robin Egg Eaten
scrp 2 18 1 12
	stim writ from 80 2
	kill ownr
endm

***REMOVER
rscr



enum 2 15 1
	kill targ
next
scrx 2 15 1 9
scrx 2 15 1 5
scrx 2 15 1 256
scrx 2 15 1 257
scrx 2 15 1 266
scrx 2 15 1 6


enum 2 15 4
	kill targ
next
scrx 2 15 4 9
scrx 2 15 4 256
scrx 2 15 4 257
scrx 2 15 4 266
scrx 2 15 4 1
scrx 2 15 4 6




enum 2 17 1
	kill targ
next
scrx 2 17 1 9
scrx 2 17 1 256
scrx 2 17 1 257
scrx 2 17 1 258
scrx 2 17 1 260

enum 2 10 1
	kill targ
next
scrx 2 10 1 9
scrx 2 10 1 6

enum 2 10 2
	kill targ
next
scrx 2 10 2 9


enum 2 18 1
	kill targ
next
scrx 2 18 1 9
scrx 2 18 1 6
scrx 2 18 1 1

enum 2 10 3
	kill targ
next
scrx 2 10 3 9

endm
